services:
  postgres:
    hostname: postgres
    image: postgres:16
    restart: on-failure:3
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  airflow-webserver:
    hostname: airflow-webserver
    build:
      context: .
      dockerfile: ./Dockerfile.airflow
    restart: on-failure:3
    mem_limit: 2g
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      AIRFLOW__CORE__AUTH_MANAGER: "airflow.api_fastapi.auth.managers.simple.simple_auth_manager.SimpleAuthManager"
      AIRFLOW__WEBSERVER__ENABLE_USER_REGISTRATION: "True"
      AIRFLOW__CORE__SIMPLE_AUTH_MANAGER_PASSWORDS_FILE: "/opt/airflow/simple_auth_manager_passwords.json"
      PYTHONPATH: /opt/airflow
      AIRFLOW__CORE__INTERNAL_API_SECRET_KEY: ${AIRFLOW__API__SECRET_KEY}
      AIRFLOW__API__BASE_URL: http://airflow-webserver:8080

    depends_on:
      - postgres
    entrypoint: /bin/bash
    command: >
      -c "
      airflow db migrate && \
      mkdir -p /opt/airflow && \
      echo '{\"admin\": \"'${POSTGRES_PASSWORD}'\"}' > /opt/airflow/simple_auth_manager_passwords.json && \
      (airflow connections get spark_default || airflow connections add spark_default --conn-uri 'spark://spark:7077') && \
      airflow api-server
      "

    ports:
      - "8080:8080"

    volumes:
      - .:/opt/airflow

  airflow-scheduler:
    hostname: airflow-scheduler
    restart: on-failure:3
    build:
      context: .
      dockerfile: ./Dockerfile.airflow
    mem_limit: 2g
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      PYTHONPATH: /opt/airflow
      AIRFLOW__CORE__INTERNAL_API_SECRET_KEY: ${AIRFLOW__API__SECRET_KEY}
      AIRFLOW__API__BASE_URL: http://airflow-webserver:8080

    depends_on:
      - airflow-webserver
    entrypoint: /bin/bash
    command: >
      -c "
      airflow db migrate && \
      airflow scheduler
      "
    ports:
      - "8081:8081"
    volumes:
      - .:/opt/airflow

  airflow-dag-processor:
    hostname: airflow-dag-processor
    build:
      context: .
      dockerfile: ./Dockerfile.airflow
    restart: on-failure:3
    mem_limit: 2g
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      PYTHONPATH: /opt/airflow
      AIRFLOW__CORE__INTERNAL_API_SECRET_KEY: ${AIRFLOW__API__SECRET_KEY}
      AIRFLOW__API__BASE_URL: http://airflow-webserver:8080

    depends_on:
      - airflow-scheduler
      - airflow-webserver

    entrypoint: /bin/bash
    command: >
      -c "
      airflow db migrate && \
      airflow dag-processor
      "
    ports:
      - "8082:8082"
    volumes:
      - .:/opt/airflow

  airflow-triggerer:
    hostname: airflow-triggerer
    build:
      context: .
      dockerfile: ./Dockerfile.airflow
    restart: on-failure:3
    mem_limit: 2g
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      PYTHONPATH: /opt/airflow
      AIRFLOW__CORE__INTERNAL_API_SECRET_KEY: ${AIRFLOW__API__SECRET_KEY}
      AIRFLOW__API__BASE_URL: http://airflow-webserver:8080
      PYTHONASYNCIODEBUG: 1

    depends_on:
      - airflow-scheduler
      - airflow-webserver
      - airflow-dag-processor

    entrypoint: /bin/bash
    command: >
      -c "
      airflow db migrate && \
      airflow triggerer
      "
    ports:
      - "8083:8083"
    volumes:
      - .:/opt/airflow

  spark:
    build:
      context: .
      dockerfile: ./Dockerfile.spark
    restart: on-failure:3
    mem_limit: 2g
    environment:
      - SPARK_MODE=master
    depends_on:
      - airflow-triggerer
    ports:
      - "7077:7077" # Spark master port
    command:
      [
        "/opt/bitnami/spark/bin/spark-class",
        "org.apache.spark.deploy.master.Master",
        "--webui-port",
        "8077",
      ]
    # change webui-port to 8077 to avoid conflict with Airflow webserver

  spark-worker:
    build:
      context: .
      dockerfile: ./Dockerfile.spark
    restart: on-failure:3
    mem_limit: 2g
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
    depends_on:
      - spark

  datapipeline:
    image: datapipeline
    build:
      context: .
      dockerfile: ./Dockerfile
    restart: on-failure:3
    mem_limit: 2g
    depends_on:
      - spark-worker
    ports:
      - "8000:8000"
    environment:
      - PYSPARK_PYTHON=python3
      - PYSPARK_DRIVER_PYTHON=python3
      - SPARK_JARS=/opt/spark/jars/postgresql-42.7.3.jar
      - IS_MAIN_CONTAINER=true
    command:
      [
        "/bin/sh",
        "-c",
        "echo 'Container is running!'; while true; do sleep 1000; done",
      ]

volumes:
  pgdata:
