services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  airflow-webserver:
    image: apache/airflow:3.0.1-python3.12
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    restart: always # <--- ensures it stays up
    entrypoint: /usr/bin/dumb-init -- airflow webserver
    command: version
    volumes:
      - ./sql_scripts:/opt/airflow/sql_scripts
      - ./airflow:/opt/airflow/airflow_scripts

  airflow-scheduler:
    image: apache/airflow:3.0.1-python3.12
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    depends_on:
      - airflow-webserver
    ports:
      - "8081:8081"
    restart: always # <--- ensures it stays up
    entrypoint: /usr/bin/dumb-init -- airflow api-server

  spark:
    build:
      context: .
      dockerfile: ./Dockerfile.spark
    environment:
      - SPARK_MODE=master
    depends_on:
      - airflow-scheduler
    ports:
      - "8077:8077" # Spark UI
      - "7077:7077" # Spark master port

  spark-worker:
    build:
      context: .
      dockerfile: ./Dockerfile.spark
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
    depends_on:
      - spark

  datapipeline:
    image: datapipeline
    build:
      context: .
      dockerfile: ./Dockerfile
    depends_on:
      - spark-worker
    ports:
      - "8000:8000"
    environment:
      - PYSPARK_PYTHON=python3
      - PYSPARK_DRIVER_PYTHON=python3
      - SPARK_JARS=/opt/spark/jars/postgresql-42.7.3.jar
    command:
      [
        "/bin/sh",
        "-c",
        "echo 'Container is running!'; while true; do sleep 1000; done",
      ]

volumes:
  pgdata:
